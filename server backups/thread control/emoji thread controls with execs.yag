{{/* thread management emoji addon & simplified starboard 
added + removed reactions */}}


{{/* role ID of people who can use the database commands */}}
{{$staff := 750543521227866215 }} 

{{/* db saving & thread logging cc for execCC */}}
{{$ccid := 244}}

{{/* thread management variables */}}
{{$pin := "üìç"}} {{/* emoji to use for pinning posts */}}
{{$save := "üíæ"}} {{/* emoji to use for resaving thread info / setting new author */}}
{{$tdel := "‚ùå"}}{{/* emoji for deleting thread data -tdel */}}

{{$staff := 750543521227866215}} {{/* role ID people need to use resave command */}}

{{/* Pinboard variables */}}
{{$star := "üìå"}}{{/* star emoji */}}
{{$thresh := 3}}{{/* how many reactions needed to move to starboard */}}
{{$maxAge := "2w"}}{{/* how old a post can be before it can't be added to starboard anymore */}}
{{$pinch := 1020745284365602996}}{{/* ID of starboard channel */}}
{{$color := 16744192 }}{{/* embed color */}}


{{/* Actual code */}}

{{/* thread management */}}
{{if .Channel.IsThread}}  

    {{/* info to help exec other CCs */}}
    {{$thr := .Channel}}
    {{$thrn := (getThread nil).Name}}
    {{$paren := .Channel.ParentID}}
    {{$cate := (getChannel (getChannel .Channel.ParentID).ParentID).Name}}
    {{$thra := .Message.Author}}
    {{$catid := (getChannel (getChannel .Channel.ParentID).ParentID)}}
    {{$1 := "1"}}
    {{$2 := "2"}}
    {{$3 := "3"}}

    {{$tinfo := sdict 
    "thread" $thr 
    "tname" $thrn 
    "parent" $paren 
    "cat" $cate
    "tauthor" $thra
    }}
 
    {{if or (eq .Reaction.Emoji.APIName $pin) (eq .Reaction.Emoji.APIName $save) (eq .Reaction.Emoji.APIName $tdel)}}

    {{/* check for db entry */}}
    {{$tdb := (dbGet .Channel.ID "threads")}}

        {{/* pins */}}
        {{if eq .Reaction.Emoji.APIName $pin }}
            {{if (eq .User.ID (($tdb).Value.tauthor.ID)) }}
                
                {{if .ReactionAdded }}
                    {{ pinMessage nil .ReactionMessage.ID}}
                {{else}}
                    {{unpinMessage nil .ReactionMessage.ID}}
                {{end}}
            {{end}}
        {{end}}
    
        {{/* staff actions */}}
        {{if hasRoleID $staff}}

            {{/* re-save thread info / set new author */}}
            {{if and (.ReactionAdded) (eq .Reaction.Emoji.APIName $save) }}
                    
                {{$tinfo.Set "tauthor" (.Message.Author)}}
                {{$tauth := .Message.Author }}{{/* gets author of parent message */}}
                {{$ra := .Message.Author.Mention}}
                {{$ra2 := .Message.Author}}
                
                    {{if $tdb}}
                        {{/* save new author  & log it */}}
                        
                        {{execCC $ccid nil 0 (sdict "thread" $thr "tname" $thrn "parent" $paren "cat" $cate "tauthor" $thra "tauthor2" $tauth "user" .User "msgl" .Message.Link "catid" $catid "type" $3 "ra" $ra "ra2" $ra2)}}
                    
                    {{else}}
                        {{/* treat it like new thread creation */}}
                        {{execCC $ccid nil 0 (sdict "thread" $thr "tname" $thrn "parent" $paren "cat" $cate "tauthor" $thra "user" .User "msgl" .Message.Link "catid" $catid "type" $1)}}
                    {{end}}
                            
                {{$x := sendMessageRetID nil (print "**Thread Information Re-saved.** \n\nNew Thread Author: `" .Message.Author "` \nCurrent Thread Name: `" .Channel.Name "`" )}}
                {{sleep 1}}
                {{addMessageReactions nil .Message.ID "‚úÖ"}}
                {{sleep 1}}
                {{deleteMessageReaction nil .Message.ID .User.ID $save}}
                              
                {{deleteMessage nil $x 20}}

                {{deleteMessageReaction nil .Message.ID 204255221017214977 "‚úÖ"}}

            {{end}}

            {{/* tdel */}}
            {{if and ( .ReactionAdded) (eq .Reaction.Emoji.APIName $tdel) }}
                {{dbDel .Channel.ID "threads" }}
                {{sleep 1}}
                {{addMessageReactions nil .Message.ID "‚úÖ"}}
                {{sleep 5}}
                {{deleteMessageReaction nil .Message.ID .User.ID $tdel}}
                {{deleteMessageReaction nil .Message.ID 204255221017214977 "‚úÖ"}}
            {{end}}

                
        {{end}}
    {{end}}
{{end}}



{{/* STARBOARD / PINBOARD */}}


{{/* count stars & add to starboard */}}
{{$count := ""}}
{{if and (eq .Reaction.Emoji.APIName $star) (le (currentTime.Sub .Message.Timestamp.Parse) (toDuration $maxAge)) (.ReactionAdded) }}

	{{range .ReactionMessage.Reactions}}
		{{- if eq .Emoji.APIName $star -}}
			{{- $count = .Count -}}
		{{- end -}}
	{{- end}}

	{{if $count}}
		{{if (eq $thresh $count)}}
            {{/* announce a msg was added */}}
            {{sendMessage nil (complexMessage "reply" .Message.ID 
            "content" "üéâ" 
            "embed" (cembed 
            "description" (print "This message was just added to [#pinboard](https://discord.com/channels/750541618389712896/1020745284365602996)! \nView it [here](" .Message.Link ")." ) 
            "color" $color)
            ) }}

			{{/* add to starboard */}}

			{{/* credit embed */}}
			{{$postembed := cembed
			"color" $color 
			"title" "**Above Message Information**"
			"description" (print "**Author:** " .Message.Author.Mention " (" .Message.Author ") \n**Channel: **" .Channel.Name " (" .Channel.Mention  ") \n[Message Link](" .Message.Link ")\n\n**Originally Posted:** <t:" .Message.Timestamp.Parse.Unix "> \n**Pinned:** <t:" currentTime.Unix ">" )
			"thumbnail" (sdict "url" (.Message.Author.AvatarURL "512") )
			}}

			{{/* copying messages */}}
			{{if and (not .Message.Embeds) (not .Message.Attachments)}}
				{{sendMessage $pinch (complexMessage "content" (print "**Quoted Message:**\n" .Message.ContentWithMentionsReplaced) "embed" $postembed )}}


			{{else if and (.Message.Embeds) (not .Message.Attachments)}}
				{{sendMessage $pinch (complexMessage "content" (print "**Quoted Message:**\n" .Message.ContentWithMentionsReplaced ) "embed" (index .Message.Embeds 0) )}}
				{{sendMessage $pinch $postembed}}


			{{else if .Message.Attachments}}
				{{$url := cslice}}
				{{range .Message.Attachments}}
					{{- $url = $url.Append .URL -}}
				{{- end}}

				{{if and (.Message.Embeds) (.Message.Attachments)}}
					{{sendMessage $pinch (complexMessage "content" (print "**Quoted Message:**\n" .Message.ContentWithMentionsReplaced "embed" (index .Message.Embeds 0)) )}}
					{{sendMessage $pinch (print "**Attachments:**\n" (joinStr "\n" $url))}}
					{{sendMessage $pinch $postembed}}

				{{else}}
					{{sendMessage $pinch (print "**Quoted Message:**\n" .Message.ContentWithMentionsReplaced "\n **Attachments:**\n" (joinStr "\n" $url)) }}
					{{sendMessage $pinch $postembed}}
				{{end}}

			{{end}}


		{{end}}
	{{end}}


{{end}}